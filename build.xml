<?xml version="1.0" encoding="UTF-8"?>
<project name="JBidwatcher" default="apps" basedir='.'>
<!-- Since properties are inmutable, the first definition of a properties is used! -->
  <!-- Read computers environment -->
  <property environment="env" />

  <!-- Set GITVERSION for local build and remove comment signs -->
  <!-- <property name="GITVERSION" value="local" /> -->

  <!-- To build the test tool, go: -->
  <!--   ant -Dmain.class=com.jbidwatcher.app.JBTool jar -->
  <property name="main.class" value="com.jbidwatcher.app.JBidWatch" />
  <property name="build.dir" value="classes" />
  <property name="src.dir" value="src" />
  <property name="dest.dir" value="." />
  <property name="main.dir" value="." />
  <property name="log.dir" value="logs" />
  <property name="lib.dir" value="lib" />
  <property name="sparkle.dir" value="platform/sparkle" />
  <property name="platform.dir" value="platform" />
  <property name="JAVADIR" value="src" />

  <property name="app.name"   value="JBidwatcher" />
  <property name="VER" value="2.99pre1" />
  <property name="TARSRC" value="jbidwatcher-${VER}" />
  <property name="INTERMEDIATE" value="${app.name}.jar" />
  <property name="BINARY" value="${app.name}-${VER}.jar" />
  <property name="BINARYSCRIPTING" value="${app.name}-${VER}-script.jar" />
  <property name="OPT_BIN" value="${app.name}-${VER}_o.jar" />
  <property name="UNOPT_BIN" value="${app.name}-${VER}_u.jar" />
  <property name="TARFILE" value="${TARSRC}.tar.bz2" />
  <property name="APPSCRIPTING" value="${app.name}-${VER}-script.app.tar.gz" />
  <property name="APPFILE" value="${app.name}-${VER}.app.tar.gz" />
  <property name="osx.app.name" value="${app.name}.app" />
  <property name="build.path" value="/tmp/building" />
  <property name="osx.app.path" value="/tmp/building/${osx.app.name}" />
  <property name="DMGFILE" value="${app.name}-${VER}.dmg" />
  <property name="EXESCRIPTING" value="${app.name}-${VER}-script.exe" />
  <property name="EXEFILE" value="${app.name}-${VER}.exe" />
  <property name="MANIFEST" value="META-INF/MANIFEST.MF" />
  <property name="ONEJAR_MANIFEST" value="onejar/META-INF/MANIFEST.MF" />

  <property name="jopt.jar" value="${JAVADIR}/jopt/jopt.jar" />
  <!-- available file="${jopt.jar}" property="jopt.jar.present"/ -->

  <!-- Read any properties that are local to the used installation -->
  <!-- This file must not reside in the repository!!! --> 
  <property file="build-local.properties" />

  <!-- Read properties that are special for this computer -->
  <!-- It could be placed in the repository -->
  <property file="build-${env.COMPUTERNAME}.properties" />

  <!-- Read properties that are special for this user -->
  <!-- It could be placed in the repository -->  
  <property file="build-${env.USERNAME}.properties" />

  <path id="project.class.path">
    <pathelement path="${build.dir}" />
    <pathelement path="${src.dir}" />
    <pathelement path="${lib.dir}/annotations.jar" />
    <pathelement path="${lib.dir}/aopalliance.jar" />
    <pathelement path="${lib.dir}/apple.jar" />
    <pathelement path="${platform.dir}/nonap.jar" />
    <pathelement path="${lib.dir}/derby.jar" />
    <pathelement path="${lib.dir}/guice-3.0.jar" />
    <pathelement path="${lib.dir}/guice-assistedinject-3.0.jar" />
    <pathelement path="${lib.dir}/mahalo.jar" />
    <pathelement path="${lib.dir}/javax.inject.jar" />
    <pathelement path="${lib.dir}/jsr305-1.3.9.jar" />
    <pathelement path="${lib.dir}/jDeskMetrics.jar" />
    <pathelement path="${lib.dir}/txtmark.jar" />
    <pathelement path="${lib.dir}/jdesktop.jar" />
    <pathelement path="${lib.dir}/jl1.0.1.jar" />
    <pathelement path="${lib.dir}/jsoup-1.7.1.jar" />
    <pathelement path="${lib.dir}/jruby-incomplete.jar" />
    <pathelement path="${lib.dir}/jline-2.11.jar" />
    <pathelement path="${lib.dir}/readline.jar" />
    <pathelement path="${lib.dir}/json_simple-1.1.jar" />
    <pathelement path="${lib.dir}/l2fprod-common-fontchooser.jar" />
    <pathelement path="${lib.dir}/mysql-connector-java-5.1.7-bin.jar" />
  </path>

  <target name="test" depends="compile" description="Prepare for build">
    <tstamp/>
    <echo level="info" message="build testing." />
  </target>
  
  <target name="init" description="Prepare for build">
    <tstamp/>
    <mkdir dir="${build.dir}" />
    <mkdir dir="${log.dir}" />
  </target>

  <target name="compile" depends="init">
    <echo level="info" message="Compiling all classes." />
    <mkdir dir="${build.dir}" />
      <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false" debug="on" source="1.6" target="1.6">
          <classpath refid="project.class.path" />
          <include name="**/*.java" />
      </javac>
  </target>

  <target name="whatsnew">
    <cvschangelog destfile="changelog.xml" start="31 March 2006">
      <user displayname="Morgan Schweers" userid="cyberfox"/>
    </cvschangelog>
    <style in="changelog.xml" out="changelog.html" style="/usr/share/ant/etc/changelog.xsl">
      <param name="title" expression="JBidwatcher Recent Changes" />
      <param name="module" expression="JBidwatcher" />
    </style>
  </target>

  <target name="tar" description="Building source .tar file.">
    <tar destfile="${TARFILE}" compression="bzip2" longfile="gnu">
      <tarfileset prefix="${TARSRC}/src" dir="${src.dir}" includes="**/*.java" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="*.jpg" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="*.sql" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="*.xsl" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="display.cfg" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="auctions.dtd" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="TODO" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="COPYING.html" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="build.xml" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="platform/jbidwatcher.jnlp" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="${MANIFEST}" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="jbidwatcher.properties" />
      <tarfileset prefix="${TARSRC}" dir="${main.dir}" includes="ebay_*.properties" />
      <tarfileset prefix="${TARSRC}/icons" dir="${main.dir}/icons" includes="**/*.gif" />
      <tarfileset prefix="${TARSRC}/icons" dir="${main.dir}/icons" includes="**/*.png" />
      <tarfileset prefix="${TARSRC}/audio" dir="${main.dir}/audio" includes="*.mp3" />
      <tarfileset prefix="${TARSRC}/db" dir="${main.dir}/db" includes="*.sql" />
      <tarfileset prefix="${TARSRC}/platform" dir="${main.dir}/platform" />
      <tarfileset prefix="${TARSRC}/help" dir="${main.dir}/help" includes="*.jpg" />
      <tarfileset prefix="${TARSRC}/help" dir="${main.dir}/help" includes="*.jbh" />
      <tarfileset prefix="${TARSRC}/help" dir="${main.dir}/help" includes="*.md" />
      <tarfileset prefix="${TARSRC}/lib" dir="${main.dir}/lib" />
      <tarfileset prefix="${TARSRC}/onejar" dir="${main.dir}/onejar" />
    </tar>
  </target>

  <target name="jar-real" depends="compile">
    <echo level="info" message="Building primary .jar file." />
    <copy todir="help/" file="COPYING.html" />

    <exec executable="git" outputproperty="GITVERSION" errorproperty="" failifexecutionfails="no">
      <arg line="describe --tags --long"/>
    </exec>

    <mkdir dir="META-INF"/>

    <manifest file="${MANIFEST}">
      <attribute name="Manifest-Version" value="1.0"/>
      <attribute name="Created-By" value="Morgan Schweers @ Cyberfox Software, Inc"/>
      <attribute name="Main-Class" value="${main.class}"/>
      <attribute name="Built-By" value="${user.name}"/>
      <attribute name="Implementation-Version" value="${GITVERSION}"/>
    </manifest>

    <jar jarfile="${INTERMEDIATE}" manifest="${MANIFEST}" index="true">
      <fileset dir="${main.dir}" includes="*.jpg" />
      <fileset dir="${main.dir}" includes="*.sql" />
      <fileset dir="${main.dir}" includes="*.xsl" />
      <fileset dir="${main.dir}" includes="display.cfg" />
      <fileset dir="${build.dir}" includes="**/*.class" />
      <!-- <fileset dir="${lib.dir}" includes="**/*.class" /> -->
      <fileset dir="${main.dir}" includes="icons/**/*.gif" />
      <fileset dir="${main.dir}" includes="icons/**/*.png" />
      <fileset dir="${main.dir}" includes="audio/*.mp3" />
      <fileset dir="${main.dir}" includes="db/*.sql" />
      <fileset dir="${main.dir}" includes="help/*.jpg" />
      <fileset dir="${main.dir}" includes="help/*.jbh" />
      <fileset dir="${main.dir}" includes="help/*.md" />
      <fileset dir="${main.dir}" includes="help/*.html" />
      <fileset dir="${main.dir}" includes="platform/tray.dll" />
      <fileset dir="${main.dir}" includes="jbidwatcher.properties" />
      <fileset dir="${main.dir}" includes="ebay_*.properties" />
    </jar>
    <delete file="help/COPYING.html" />
  </target>

  <target name="jar" depends="jar-real">
    <echo level="info" message="Building envelope .jar file." />
    <mkdir dir="${build.path}/main" />
    <copy file="${INTERMEDIATE}" tofile="${build.path}/main/main.jar" />

    <manifest file="${ONEJAR_MANIFEST}">
      <attribute name="Manifest-Version" value="1.0" />
      <attribute name="Ant-Version" value="Apache Ant 1.7.0" />
      <attribute name="Created-By" value="1.4.2_04-b05 (Sun Microsystems Inc.)" />
      <attribute name="Main-Class" value="com.simontuffs.onejar.Boot" />
      <attribute name="One-Jar-Expand" value="expand,doc,file.txt" />
      <attribute name="Built-By" value="${user.name}"/>
      <attribute name="Implementation-Version" value="${GITVERSION}"/>
    </manifest>

    <jar jarfile="${BINARY}" manifest="${ONEJAR_MANIFEST}">
      <fileset dir="${main.dir}/onejar" includes="com/**/*.class" />
      <fileset dir="${main.dir}/onejar" includes="boot-manifest.mf" />
      <fileset dir="${build.path}" includes="main/main.jar" />
      <fileset dir="${main.dir}" includes="lib/*.jar" />
      <fileset dir="${main.dir}" includes="lib/jbidwatcher/**" />
    </jar>
    <delete dir="${build.path}/main" />
  </target>

  <target name="scripting-jar" depends="jar-real">
    <echo level="info" message="Building the top-level .jar file." />
    <mkdir dir="${build.path}/main" />
    <copy file="${INTERMEDIATE}" tofile="${build.path}/main/main.jar" />
    <jar jarfile="${BINARY}" manifest="onejar/META-INF/MANIFEST.MF">
      <fileset dir="${main.dir}/onejar" includes="com/**/*.class" />
      <fileset dir="${main.dir}/onejar" includes="boot-manifest.mf" />
      <fileset dir="${build.path}" includes="main/main.jar" />
      <fileset dir="${main.dir}" includes="lib/*.jar" />
      <fileset dir="${main.dir}" includes="lib/jbidwatcher/**" />
    </jar>
    <delete dir="${build.path}/main" />
  </target>

  <property name="packaging" value="platform" />

  <target name="exe" depends="jar">
    <antcall target="exe-real" />
  </target>

  <target name="exe-real">
    <exec executable="git" outputproperty="GITVERSION" errorproperty="" failifexecutionfails="no">
      <arg line="describe --tags --long"/>
    </exec>

    <copy file="${INTERMEDIATE}" todir="/tmp"/>
    <copy file="${BINARY}" todir="/tmp"/>
    <copy file="${packaging}/jbidwatcher.ico" todir="/tmp"/>
    <copy file="${packaging}/jbidwatcher-launch.xml" todir="/tmp">
      <filterchain>
        <replacetokens begintoken="`" endtoken="`">
          <token key="binary" value="${INTERMEDIATE}"/>
          <token key="executable" value="${EXEFILE}"/>
	  <token key="appname" value="${app.name}" />
	  <token key="version" value="${GITVERSION}" />
        </replacetokens>
      </filterchain>
    </copy>
    <exec executable="launch4j" failonerror="true">
      <arg line="/tmp/jbidwatcher-launch.xml"/>
    </exec>
    <delete file="/tmp/jbidwatcher-launch.xml"/>
    <delete file="/tmp/${BINARY}"/>
    <delete file="/tmp/jbidwatcher.ico"/>
    <copy file="/tmp/${EXEFILE}" todir="."/>
  </target>

  <target name="osx" depends="jar">
    <antcall target="clean-osx-build" />
    <antcall target="osx-distribution" />
    <antcall target="osx-app" />
  </target>

  <target name="dmg-scripting" depends="osx-distribution">
    <copy todir="${osx.app.path}/Contents/Resources/Java">
      <fileset dir="${lib.dir}" includes="jruby-incomplete.jar" />
      <fileset dir="${lib.dir}" includes="jline-2.11.jar" />
      <fileset dir="${lib.dir}" includes="readline.jar" />
      <fileset dir="${main.dir}" includes="lib/jbidwatcher/**" />
    </copy>
    <antcall target="dmg-real" />
  </target>

  <target name="dmg" depends="osx-distribution">
    <copy todir="${osx.app.path}/Contents/Resources/Java">
      <fileset dir="${lib.dir}" includes="jruby-incomplete.jar" />
      <fileset dir="${lib.dir}" includes="jline-2.11.jar" />
      <fileset dir="${lib.dir}" includes="readline.jar" />
      <fileset dir="${main.dir}" includes="lib/jbidwatcher/**" />
    </copy>
    <antcall target="dmg-real" />
  </target>

  <target name="dmg-real">
    <exec executable="ln">
      <arg value="-s" />
      <arg value="/Applications" />
      <arg value="${osx.app.path}/../Applications" />
    </exec>
    <copy todir="${osx.app.path}/../" file="COPYING.html" />

    <exec executable="mkisofs">
      <arg line='-V JBidwatcher -r -hide-rr-moved -apple -o ${DMGFILE} "${osx.app.path}/.."'/>
    </exec>

    <delete file="${osx.app.path}/../COPYING.html"/>
    <!-- This has to be calling 'rm' because the 'delete' task doesn't handle symlinks right. -->
    <exec executable="rm">
      <arg value="${osx.app.path}/../Applications" />
    </exec>
  </target>

  <target name="osx-development" depends="osx-distribution">
    <copy todir="${dest.dir}/${osx.app.name}">
      <fileset dir="${osx.app.path}" includes="**" />
    </copy>
  </target>

  <target name="osx-distribution">
    <delete dir="${osx.app.path}" />
    <mkdir dir="${osx.app.path}" />
    <mkdir dir="${osx.app.path}/Contents" />
    <mkdir dir="${osx.app.path}/Contents/MacOS" />
    <mkdir dir="${osx.app.path}/Contents/Resources" />
    <mkdir dir="${osx.app.path}/Contents/Resources/Java" />
    <mkdir dir="${osx.app.path}/Contents/Frameworks"/>

    <!-- The Sparkle Framework must also be copied into the application package -->
    <unzip src="${sparkle.dir}/Sparkle.framework.zip" dest="${osx.app.path}/Contents/Frameworks"/>
    <!-- The Ant unzip task does not preserve symlinks, so we recreate them -->
    <symlink link="${osx.app.path}/Contents/Frameworks/Sparkle.framework/Versions/Current" resource="./A"/>
    <symlink link="${osx.app.path}/Contents/Frameworks/Sparkle.framework/Headers" resource="./Versions/Current/Headers"/>
    <symlink link="${osx.app.path}/Contents/Frameworks/Sparkle.framework/Resources" resource="./Versions/Current/Resources"/>
    <symlink link="${osx.app.path}/Contents/Frameworks/Sparkle.framework/Sparkle" resource="./Versions/Current/Sparkle"/>
    <symlink link="${osx.app.path}/Contents/Frameworks/Sparkle.framework/Resources/fr_CA.lproj" resource="./fr.lproj"/>
    <!-- Restore the file permissions to the Sparkle relaunch tool -->
    <chmod file="${osx.app.path}/Contents/Frameworks/Sparkle.framework/Resources/relaunch" perm="ugo+rx"></chmod>

    <copy file="${packaging}/Info.plist" todir="${osx.app.path}/Contents">
      <filterchain>
        <replacetokens begintoken="`" endtoken="`">
          <token key="binary" value="${INTERMEDIATE}" />
	  <token key="version" value="${GITVERSION}" />
          <token key="friendly_version" value="${VER}" />
	  <token key="appname" value="${app.name}" />
        </replacetokens>
      </filterchain>
    </copy>

    <copy file="${packaging}/JavaApplicationStub" todir="${osx.app.path}/Contents/MacOS" />
    <chmod file="${osx.app.path}/Contents/MacOS/JavaApplicationStub" perm="755" />
    <copy file="${packaging}/Info.plist" todir="${osx.app.path}/Contents" />
    <copy file="${packaging}/PkgInfo" todir="${osx.app.path}/Contents" />
    <copy file="${sparkle.dir}/dsa_pub.pem" todir="${osx.app.path}/Contents/Resources/"/>
    <copy file="${packaging}/jbidicon.icns" todir="${osx.app.path}/Contents/Resources" />
    <copy file="${packaging}/quaqua.jar" todir="${osx.app.path}/Contents/Resources/Java" />
    <copy file="${packaging}/nonap.jar" todir="${osx.app.path}/Contents/Resources/Java" />
    <copy file="${packaging}/libquaqua.jnilib" todir="${osx.app.path}/Contents/Resources/Java" />
    <copy file="${packaging}/libquaqua64.jnilib" todir="${osx.app.path}/Contents/Resources/Java" />
    <copy file="${packaging}/libNoNap.jnilib" todir="${osx.app.path}/Contents/Resources/Java" />
    <copy file="${packaging}/libsparkle_init.dylib" todir="${osx.app.path}/Contents/Resources/Java/"/>
    <chmod file="${osx.app.path}/Contents/Resources/Java/libquaqua.jnilib" perm="755" />
    <chmod file="${osx.app.path}/Contents/Resources/Java/libquaqua64.jnilib" perm="755" />
    <chmod file="${osx.app.path}/Contents/Resources/Java/libNoNap.jnilib" perm="755" />
    <chmod file="${osx.app.path}/Contents/Resources/Java/libsparkle_init.dylib" perm="755" />
    <symlink link="${osx.app.path}/Contents/Resources/Java/libsparkle_init.jnilib" resource="libsparkle_init.dylib" />
    <copy file="${dest.dir}/${INTERMEDIATE}" todir="${osx.app.path}/Contents/Resources/Java" />
    <!--- Put all the libraries in the resources directory -->
    <copy todir="${osx.app.path}/Contents/Resources/Java">
      <fileset dir="${lib.dir}" includes="apple.jar" />
      <fileset dir="${lib.dir}" includes="aopalliance.jar" />
      <fileset dir="${lib.dir}" includes="derby.jar" />
      <fileset dir="${lib.dir}" includes="guice-3.0.jar" />
      <fileset dir="${lib.dir}" includes="guice-assistedinject-3.0.jar" />
      <fileset dir="${lib.dir}" includes="jdesktop.jar" />
      <fileset dir="${lib.dir}" includes="javax.inject.jar" />
      <fileset dir="${lib.dir}" includes="jl1.0.1.jar" />
      <fileset dir="${lib.dir}" includes="jsoup-1.7.1.jar" />
      <fileset dir="${lib.dir}" includes="mahalo.jar" />
      <fileset dir="${lib.dir}" includes="jsr305-1.3.9.jar" />
      <fileset dir="${lib.dir}" includes="jDeskMetrics.jar" />
      <fileset dir="${lib.dir}" includes="txtmark.jar" />
      <fileset dir="${lib.dir}" includes="json_simple-1.1.jar" />
      <fileset dir="${lib.dir}" includes="l2fprod-common-fontchooser.jar" />
      <fileset dir="${lib.dir}" includes="mysql-connector-java-5.1.7-bin.jar" />
    </copy>
  </target>

  <target name="osx-app">
    <copy todir="${osx.app.path}/Contents/Resources/Java">
      <fileset dir="${lib.dir}" includes="readline.jar" />
      <fileset dir="${lib.dir}" includes="jline-2.11.jar" />
      <fileset dir="${lib.dir}" includes="jruby-incomplete.jar" />
      <fileset dir="${main.dir}" includes="lib/jbidwatcher/**" />
    </copy>
    <tar destfile="${APPFILE}" compression="gzip" longfile="gnu">
      <tarfileset dir="${osx.app.path}" prefix="${app.name}.app" mode="755">
	<include name="Contents/MacOS/JavaApplicationStub" />
	<include name="Contents/Resources/Java/libquaqua.jnilib" />
	<include name="Contents/Resources/Java/libNoNap.jnilib" />
      </tarfileset>

      <tarfileset dir="${osx.app.path}" prefix="${app.name}.app">
	<include name="**" />
	<exclude name="Contents" />
	<exclude name="Contents/MacOS" />
	<exclude name="Contents/Resources" />
	<exclude name="Contents/Resources/Java" />
	<exclude name="Contents/MacOS/JavaApplicationStub" />
	<exclude name="Contents/Resources/Java/libquaqua.jnilib" />
	<exclude name="Contents/Resources/Java/libNoNap.jnilib" />
      </tarfileset>
    </tar>
  </target>

  <target name="osx-app-scripting" depends="osx-distribution">
    <copy todir="${osx.app.path}/Contents/Resources/Java">
      <fileset dir="${lib.dir}" includes="readline.jar" />
      <fileset dir="${lib.dir}" includes="jline-2.11.jar" />
      <fileset dir="${lib.dir}" includes="jruby-incomplete.jar" />
      <fileset dir="${main.dir}" includes="lib/jbidwatcher/**" />
    </copy>
    <antcall target="osx-app" />
  </target>

  <target name="clean-osx-build">
    <delete dir="${osx.app.path}" />
    <delete dir="${dest.dir}/${osx.app.name}" />
  </target>

  <target name="clean" description="Clean all build products.">
    <echo level="info" message="Clean all build products." />
    <delete file="${BINARY}" />
    <delete file="${BINARYSCRIPTING}" />
    <delete file="${INTERMEDIATE}" />
    <delete file="${UNOPT_BIN}" />
    <delete file="${TARFILE}" />
    <delete file="${APPFILE}" />
    <delete file="${EXEFILE}" />
    <delete file="${APPSCRIPTING}" />
    <delete file="${EXESCRIPTING}" />
    <delete file="${DMGFILE}" />
    <delete includeEmptyDirs="true" dir="osx"/>
    <delete dir="${log.dir}" />
    <delete dir="${build.dir}" />
    <delete dir="META-INF" />
    <antcall target="clean-osx-build" />
    <!--  Delete intermediate files in case they still are around -->
    <delete file="${build.path}/main/main.jar" />
    <delete file="/tmp/jbidwatcher-launch.xml"/>
    <delete file="/tmp/${BINARY}"/>
    <delete file="/tmp/jbidwatcher.ico"/>
  </target>

  <target name="scripting" depends="scripting-jar">
    <antcall target="scripting-jar" />
    <antcall target="osx-app-scripting" />
    <antcall target="dmg-scripting" />
    <antcall target="exe-real" />
  </target>

  <target name="apps" depends="tar,osx,exe,dmg" />

  <target name="release" depends="apps" description="Build for a full release.">
    <property name="server.path" value="jbidwatcher@jbidwatcher.com:www/enhanced/downloads" />
    <antcall target="upload" />
  </target>

  <target name="scripting-release" depends="tar,scripting" description="Build for a full release with scripting.">
    <property name="server.path" value="jbidwatcher@jbidwatcher.com:www/enhanced/downloads" />
    <antcall target="upload" />
  </target>

  <target name="beta" depends="apps" description="Build for a pre-release version.">
    <property name="server.path" value="jbidwatcher@jbidwatcher.com:www/htdocs/beta" />
    <antcall target="upload" />
  </target>

  <target name="alpha" depends="apps" description="Build for an alpha or beta version.">
    <property name="server.path" value="jbidwatcher@jbidwatcher.com:www/htdocs/alpha" />
    <antcall target="upload" />
  </target>

  <target name="enhanced" depends="apps" description="Build a pre-release for the enhanced site.">
    <property name="server.path" value="jbidwatcher@jbidwatcher.com:www/enhanced/downloads" />
    <antcall target="upload" />
  </target>

  <target name="upload" description="Upload the code to a given destination">
    <scp verbose="true" todir="${server.path}" keyfile="/home/build/.ssh/id_rsa" passphrase="">
      <fileset dir="${main.dir}">
	<include name="${BINARY}" />
	<include name="${APPFILE}" />
	<include name="${EXEFILE}" />
	<include name="${BINARYSCRIPTING}" />
	<include name="${APPSCRIPTING}" />
	<include name="${EXESCRIPTING}" />
	<include name="${TARFILE}" />
	<include name="${DMGFILE}" />
      </fileset>
    </scp>
  </target>

  <target name="run" description="Start Application">
    <java fork="true" jar="${BINARY}" args="-Xmx512m -Xms256m"/>
  </target>
</project>
